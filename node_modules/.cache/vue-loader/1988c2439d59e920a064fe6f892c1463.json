{"remainingRequest":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\vue-excel-xlsx\\VueExcelXlsx.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\vue-excel-xlsx\\VueExcelXlsx.vue","mtime":1666176540609},{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666176538733},{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\babel-loader\\lib\\index.js","mtime":1666176542014},{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1666176543703},{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666176538733},{"path":"C:\\DEV\\FLJ\\Plataforma\\PLATTFORM_Sandbox\\node_modules\\vue-loader\\lib\\index.js","mtime":1666176542441}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQogICAgaW1wb3J0IFhMU1ggZnJvbSAneGxzeC94bHN4JzsNCg0KICAgIGV4cG9ydCBkZWZhdWx0IHsNCiAgICAgICAgbmFtZTogInZ1ZS1leGNlbC14bHN4IiwNCiAgICAgICAgcHJvcHM6IHsNCiAgICAgICAgICAgIGNvbHVtbnM6IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBBcnJheSwNCiAgICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBbXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBBcnJheSwNCiAgICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiAgW10NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBmaWxlTmFtZTogew0KICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgICAgICAgICBkZWZhdWx0OiAnZXhjZWwnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgc2hlZXROYW1lOiB7DQogICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6ICdTaGVldE5hbWUnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZmlsZVR5cGU6IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICAgICAgZGVmYXVsdDogJ3hsc3gnLA0KICAgICAgICAgICAgICAgIHZhbGlkYXRvcjogKHZhbCkgPT4gWyd4bHN4JywgJ3hscyddLmluY2x1ZGVzKHZhbCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgICBleHBvcnRFeGNlbCgpIHsNCiAgICAgICAgICAgICAgICBsZXQgY3JlYXRlWExTTEZvcm1hdE9iaiA9IFtdOw0KICAgICAgICAgICAgICAgIGxldCBuZXdYbHNIZWFkZXIgPSBbXTsNCiAgICAgICAgICAgICAgICBsZXQgdm0gPSB0aGlzOw0KICAgICAgICAgICAgICAgIGlmICh2bS5jb2x1bW5zLmxlbmd0aCA9PT0gMCl7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBZGQgY29sdW1ucyEiKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAodm0uZGF0YS5sZW5ndGggPT09IDApew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQWRkIGRhdGEhIik7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdm0uY29sdW1ucy5tYXAoY29sdW1uID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbmV3WGxzSGVhZGVyLnB1c2goY29sdW1uLmxhYmVsKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGNyZWF0ZVhMU0xGb3JtYXRPYmoucHVzaChuZXdYbHNIZWFkZXIpOw0KICAgICAgICAgICAgICAgIHZtLmRhdGEubWFwKHZhbHVlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IGlubmVyUm93RGF0YSA9IFtdOw0KICAgICAgICAgICAgICAgICAgICB2bS5jb2x1bW5zLm1hcCh2YWwgPT4gew0KICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWVsZFZhbHVlID0gdmFsdWVbdmFsLmZpZWxkXTsNCiAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsLmZpZWxkLnNwbGl0KCcuJykubGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRWYWx1ZSA9IHRoaXMuZ2V0TmVzdGVkVmFsdWUodmFsdWUsIHZhbC5maWVsZCk7DQogICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWwuZGF0YUZvcm1hdCAmJiB0eXBlb2YgdmFsLmRhdGFGb3JtYXQgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lclJvd0RhdGEucHVzaCh2YWwuZGF0YUZvcm1hdChmaWVsZFZhbHVlKSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubmVyUm93RGF0YS5wdXNoKGZpZWxkVmFsdWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlWExTTEZvcm1hdE9iai5wdXNoKGlubmVyUm93RGF0YSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBsZXQgZmlsZU5hbWUgPSB2bS5maWxlTmFtZSArICIuIiArIHZtLmZpbGVUeXBlOw0KDQogICAgICAgICAgICAgICAgbGV0IHdzX25hbWUgPSB2bS5zaGVldE5hbWU7DQoNCiAgICAgICAgICAgICAgICBsZXQgd2IgPSBYTFNYLnV0aWxzLmJvb2tfbmV3KCksDQogICAgICAgICAgICAgICAgICAgIHdzID0gWExTWC51dGlscy5hb2FfdG9fc2hlZXQoY3JlYXRlWExTTEZvcm1hdE9iaik7DQogICAgICAgICAgICAgICAgWExTWC51dGlscy5ib29rX2FwcGVuZF9zaGVldCh3Yiwgd3MsIHdzX25hbWUpOw0KICAgICAgICAgICAgICAgIFhMU1gud3JpdGVGaWxlKHdiLCBmaWxlTmFtZSk7DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZ2V0TmVzdGVkVmFsdWUob2JqZWN0LCBzdHJpbmcpIHsNCiAgICAgICAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZSgvXFsoXHcrKVxdL2csICcuJDEnKTsNCiAgICAgICAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZSgvXlwuLywgJycpOw0KICAgICAgICAgICAgICAgIGxldCBhID0gc3RyaW5nLnNwbGl0KCcuJyk7DQogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIG4gPSBhLmxlbmd0aDsgaSA8IG47ICsraSkgew0KICAgICAgICAgICAgICAgICAgbGV0IGsgPSBhW2ldOw0KICAgICAgICAgICAgICAgICAgaWYgKGsgaW4gb2JqZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdFtrXTsNCiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg=="},{"version":3,"sources":["VueExcelXlsx.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueExcelXlsx.vue","sourceRoot":"node_modules/vue-excel-xlsx","sourcesContent":["<template>\r\n    <button @click=\"exportExcel\">\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import XLSX from 'xlsx/xlsx';\r\n\r\n    export default {\r\n        name: \"vue-excel-xlsx\",\r\n        props: {\r\n            columns: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: () =>  []\r\n            },\r\n            fileName: {\r\n                type: String,\r\n                default: 'excel'\r\n            },\r\n            sheetName: {\r\n                type: String,\r\n                default: 'SheetName'\r\n            },\r\n            fileType: {\r\n                type: String,\r\n                default: 'xlsx',\r\n                validator: (val) => ['xlsx', 'xls'].includes(val)\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            exportExcel() {\r\n                let createXLSLFormatObj = [];\r\n                let newXlsHeader = [];\r\n                let vm = this;\r\n                if (vm.columns.length === 0){\r\n                    console.log(\"Add columns!\");\r\n                    return;\r\n                }\r\n                if (vm.data.length === 0){\r\n                    console.log(\"Add data!\");\r\n                    return;\r\n                }\r\n                vm.columns.map(column => {\r\n                    newXlsHeader.push(column.label);\r\n                });\r\n\r\n                createXLSLFormatObj.push(newXlsHeader);\r\n                vm.data.map(value => {\r\n                    let innerRowData = [];\r\n                    vm.columns.map(val => {\r\n                      let fieldValue = value[val.field];\r\n                      if (val.field.split('.').length > 1) {\r\n                        fieldValue = this.getNestedValue(value, val.field);\r\n                      }\r\n                      if (val.dataFormat && typeof val.dataFormat === 'function') {\r\n                            innerRowData.push(val.dataFormat(fieldValue));\r\n                        } else {\r\n                            innerRowData.push(fieldValue);\r\n                        }\r\n                    });\r\n                    createXLSLFormatObj.push(innerRowData);\r\n                });\r\n\r\n                let fileName = vm.fileName + \".\" + vm.fileType;\r\n\r\n                let ws_name = vm.sheetName;\r\n\r\n                let wb = XLSX.utils.book_new(),\r\n                    ws = XLSX.utils.aoa_to_sheet(createXLSLFormatObj);\r\n                XLSX.utils.book_append_sheet(wb, ws, ws_name);\r\n                XLSX.writeFile(wb, fileName);\r\n            },\r\n            getNestedValue(object, string) {\r\n                string = string.replace(/\\[(\\w+)\\]/g, '.$1');\r\n                string = string.replace(/^\\./, '');\r\n                let a = string.split('.');\r\n                for (let i = 0, n = a.length; i < n; ++i) {\r\n                  let k = a[i];\r\n                  if (k in object) {\r\n                    object = object[k];\r\n                  } else {\r\n                    return;\r\n                  }\r\n                }\r\n                return object;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}